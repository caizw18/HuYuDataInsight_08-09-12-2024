class Solution:
    def buildTree(self, preorder: list[int], inorder: list[int]) -> TreeNode:
        if not preorder or not inorder:
            return None

        root_val = preorder.pop(0)
        root = TreeNode(root_val)
        inorder_index = inorder.index(root_val)

        root.left = self.buildTree(preorder, inorder[:inorder_index])
        root.right = self.buildTree(preorder, inorder[inorder_index + 1:])

        return root

# Example usage:
# preorder = [3, 9, 20, 15, 7]
# inorder = [9, 3, 15, 20, 7]
# sol = Solution()
# tree = sol.buildTree(preorder, inorder)
# # The constructed tree's structure can be tested with other traversal methods.
